README: test and development notes

In this folder is all the various branch for target
using/testing/experimenting on top of libS52.so.

The idea is to put here everything that is not handled as
part of the core S52.


TODO:
    - populate ./ref_dump/: reference .PNG to check for regression (use IHO S-64)


TIP:
    - xmag: X11 magnify parts of the screen


------------------------------------------------------------

Makefile Target:

- s52glx:
  simple test harness for GLX

- s52gv, s52gv2:
  use to test the S52 plugin when called from OpenEV & OpenEV2 (gv)

- s52gtk2:
  use to test GTK2 only
  Usage of s52gtk2: -h or 'h' in the GL window.

- s52win32:
  wine/mingw

- s52eglx:
  EGL harness for X

- s52eglarm:
  ARM/Android (s52droid)

- s52ais
  gpsd cleint to feed AIS to s52eglx and s52droid

- s52gtk2egl, s52gtk3egl
  GTK2 / GTK3 and EGL


------------------------------------------------------------

Other Files:

- s52clutter.js, s52clutter.js.sh
  Clutter + Javascript partial experiment

- PLAUX_00.DAI
  (fix waypnt/WAYPNT01, OWNSHP vector, put cursor on layer 9, ..)

- plib*
  PLib for testing

- *.ttf
  Font for testing

- s52.cfg
  CHART & PLIB path for testing

- common setup for: s52egl.c, s52gtk2.c, s52gtkegl.c
    _egl.i                // _egl_init(), _egl_beg(), _egl_end(), _egl_done()
    _s52_setupMarPar.i    // various S52_setMarinerParam()
    _s52_setupMain.i      // various S52_loadCell(), S52_loadPLib(), S52_setS57ObjClassSupp(), ..

- common test for: s52egl.c, s52gtk2.c, s52gtkegl.c (-DUSE_TEST_OBJ)
    _radar.i              // _radar_init(), _radar_readLog(), _radar_done()
    _s52_setupCLRLIN.i    // clrlin
    _s52_setupLEGLIN.i    // leglin, _s52_setupIceRte()
    _s52_setupmarfea.i    // marfea; point, line, area
    _s52_setupOWNSHP.i    // ownshp
    _s52_setupPASTRK.i    // pastrk
    _s52_setupPRDARE.i    // PRDARE
    _s52_setupVESSEL.i    // vessel,
    _s52_setupVRMEBL.i    // cursor, ebline, vrmark


------------------------------------------------------------

Ruby:

s52gtk2.rb is a translation of s52gtk2.c to ruby.

On Linux do:

$ ln -s ../libS52.so libS52.so (to make a symbolic link)


------------------------------------------------------------

Other Folder:

- s52ui: HTML5/Dart UI for event-driven testing libS52 and functionality

- android: run libS52 on Android, use s52ui

- ref_dump: reference .PNG to check for regression (TODO)

